// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlinVersion = '1.2.71'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    minSdkVersion = 21
    targetSdkVersion = 27
    compileSdkVersion = 27

    //dependencies
    supportVersion = '27.1.1'
    constraintLayoutVersion = '1.1.3'
    playServicesVersion = '11.8.0'
    glideVersion = '3.8.0'
    crashlyticsVersion = '2.2.3@aar'
    multidexVersion = '1.0.3'
    rxJavaVersion = '2.2.0'
    rxAndroidVersion = '2.1.0'
    okhttp3Version = '3.9.0'
    retrofitVersion = '2.4.0'
    daggerVersion = '2.16'
    roomVersion = '1.1.1'
    archVersion = '1.1.1'
    timberVersion = '4.7.0'

    // test dependencies
    testRunnerVersion = '1.0.1'
    espressoVersion = '3.0.1'
    uiautomatorVersion = '2.1.2'
    junitVersion = '4.12'
    junitParamsVersion = '1.1.1'
    hamcrestVersion = '1.3'
    mockitoVersion = '2.8.9'
    mockitoKotlinVersion = '2.0.0-RC1'
    powerMockVersion = '1.7.3'
    conditionWatcherVersion = '0.2'
    coreTestingVersion = '2.0.0'

    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    kotlinTestJUnit = "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    javaxInject = "javax.inject:javax.inject:1"

    retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    retrofitRxJava2Adapter = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    okhttpLogging = "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    rxJava = "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    room = "android.arch.persistence.room:runtime:$roomVersion"
    roomRx = "android.arch.persistence.room:rxjava2:$roomVersion"
    roomCompiler = "android.arch.persistence.room:compiler:$roomVersion"
    roomTesting = "android.arch.persistence.room:testing:$roomVersion"

    // dagger
    dagger                  = "com.google.dagger:dagger:$daggerVersion"
    daggerAndroid           = "com.google.dagger:dagger-android:$daggerVersion"
    daggerSupport           = "com.google.dagger:dagger-android-support:$daggerVersion"
    daggerCompiler          = "com.google.dagger:dagger-compiler:$daggerVersion"
    daggerAndroidCompiler   = "com.google.dagger:dagger-android-processor:$daggerVersion"

    junit = "junit:junit:$junitVersion"
    hamcrest = "org.hamcrest:hamcrest-library:$hamcrestVersion"
    mockito = "org.mockito:mockito-core:$mockitoVersion"
    mockitoInline = "org.mockito:mockito-inline:$mockitoVersion"
    mockitoKotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    powerMock = "org.powermock:powermock-api-mockito2:$powerMockVersion"
    powerMockJUnit = "org.powermock:powermock-module-junit4:$powerMockVersion"
    coreTesting = "android.arch.core:core-testing:$archVersion"
}
